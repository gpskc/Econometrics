plot.wss(kwss1) # Elbow plot of Total WSS
eratio.wss(kwss1) # Optimal clusters is 3
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 48%, cluster2 = 71%, cluster3 = 47%
## Question 9 - kmeans with scaling
kwss2 <- kmeans.wss(scale(xtable),kmax=10)
plot.wss(kwss2) # Elbow plot of Total WSS
eratio.wss(kwss2) # Optimal clusters is 3
kmodel2 <- kmeans(scale(xtable),centers=3,nstart=10,iter.max=50)
table(kmodel2$cluster) # Cluster Size
kmodel2$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
xtable
xtable[1:2]
xtable[sat,income]
xtable(sat,income)
xtable[,.(sat,income)]
kwss2 <- kmeans.wss(xtable[,.(sat,income)],kmax=10)
plot.wss(kwss2) # Elbow plot of Total WSS
eratio.wss(kwss2) # Optimal clusters is 3
kmodel2 <- kmeans(scale(xtable[,.(sat,income)]),centers=3,nstart=10,iter.max=50)
table(kmodel2$cluster) # Cluster Size
kmodel2$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
ggplot(dtable,aes(x=income,y=sat,color=as.factor(group)))+geom_point()
dtable$group <- as.factor(dtable$group)
ggplot(dtable,aes(x=income,y=sat,color=as.factor(group)))+geom_point()
ggplot(dtable,aes(x=income,y=sat,color=group))+geom_point()
plot(rpart1) # inner nodes = 08 and terminal nodes = 09
plot(rpart2) # inner nodes = 02 and terminal nodes = 03
plot(rpart3) # inner nodes = 29 and terminal nodes = 30
plot(rpart1) # inner nodes = 08 and terminal nodes = 09
plot(rpart2) # inner nodes = 02 and terminal nodes = 03
plot(rpart3) # inner nodes = 29 and terminal nodes = 30
tree <- glmtree(sat~income|group,data=dtable) # glmtree model
plot(tree) # got same results obtained in fixed effects model
xtable <- data.table('sat'=dtable$sat,'income'=dtable$income) # extracting sat and income variables
xmeans <- dtable[,lapply(.SD,mean),by=group,.SDcols=2:3] # finding actual centers of both variables
kwss <- kmeans.wss(xtable,kmax=10)
plot.wss(kwss) # Elbow plot of Total WSS
kmodel <- kmeans(xtable,centers=2,nstart=10,iter.max=50)
kgroup <- kmodel$cluster
table(kgroup) # Cluster Size
kmodel$centers # Centers for K-means
xmeans # Actual centers of variables
table(kgroup,dtable$group)/500 # rough split: group1 = 60/40, group2 = 90/10, group3 = 25/75
hwss <- hclust.wss(xtable,kmax=10)
plot.wss(hwss) # Elbow plot of Total WSS
eratio.wss(hwss) # Optimal Clusters is 4
hmodel <- hclust(dist(xtable))
hgroup <- cutree(hmodel,4)
table(hgroup) # Cluster Size
table(hgroup,dtable$group)/500 # rough split: group1 = 45/35/15/5, group2 = 55/5/40/0, group3 = 20/50/5/25
plot(hmodel)
rect.hclust(model,k=4,border="green")
rect.hclust(hmodel,k=4,border="green")
rect.hclust(model,k=7,border="red")
rect.hclust(model,k=6,border="purple")
rect.hclust(model,k=5,border="blue")
rect.hclust(model,k=4,border="green")
rect.hclust(model,k=3,border="yellow")
rect.hclust(model,k=2,border="orange")
rect.hclust(hmodel,k=7,border="red")
rect.hclust(hmodel,k=6,border="purple")
rect.hclust(hmodel,k=5,border="blue")
rect.hclust(hmodel,k=4,border="green")
rect.hclust(hmodel,k=3,border="yellow")
rect.hclust(hmodel,k=2,border="orange")
plot.wss(hwss) # Elbow plot of Total WSS
rect.hclust(hmodel,k=4,border="green")
hwss <- hclust.wss(xtable,kmax=10)
plot.wss(hwss) # Elbow plot of Total WSS
eratio.wss(hwss) # Optimal Clusters is 4
hmodel <- hclust(dist(xtable))
hgroup <- cutree(hmodel,4)
table(hgroup) # Cluster Size
table(hgroup,dtable$group)/500 # rough split: group1 = 45/35/15/5, group2 = 55/5/40/0, group3 = 20/50/5/25
rect.hclust(hmodel,k=4,border="green")
hmodel <- hclust(dist(xtable))
rect.hclust(hmodel,k=4,border="green")
plot(hmodel)
rect.hclust(hmodel,k=4,border="green")
plot(hmodel) # Dendogram plot
rect.hclust(hmodel,k=4,border="green")
xtable$kgroup <- as.factor(kgroup) # Adding kgroup
xtable$hgroup <- as.factor(hgroup) # Adding hgroup
table(xtable$kgroup,xtable$hgroup) # Two-Way table
pooled_k <- lm(sat~income,data=xtable)          # K-means pooled
within_k <- lm(sat~income+kgroup-1,data=xtable) # K-means within
pooled_h <- lm(sat~income,data=xtable)          # H-clust pooled
within_h <- lm(sat~income+hgroup-1,data=xtable) # H-clust within
summary(pooled_k) # sat = 950.891 + 2.792*income
summary(within_k) # sat = 000.000 + 0.735*income + 1155*kgroup1 + 934*kgroup2
summary(within_h) # sat = 000.000 + 0.139*income + 1140*hgroup1 + 997*hgroup2 + 1272*hgroup3 + 826*hgroup4
kwss1 <- kmeans.wss(xtable$income,kmax=10)
plot.wss(kwss1) # Elbow plot of Total WSS
eratio.wss(kwss1) # Optimal clusters is 3
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 48%, cluster2 = 71%, cluster3 = 47%
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 48%, cluster2 = 71%, cluster3 = 47%
kwss1 <- kmeans.wss(xtable$income,kmax=10)
plot.wss(kwss1) # Elbow plot of Total WSS
eratio.wss(kwss1) # Optimal clusters is 3
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 48%, cluster2 = 71%, cluster3 = 47%
## Question 9 - kmeans with scaling
kwss2 <- kmeans.wss(xtable[,.(sat,income)],kmax=10)
plot.wss(kwss2) # Elbow plot of Total WSS
eratio.wss(kwss2) # Optimal clusters is 3
kmodel2 <- kmeans(scale(xtable[,.(sat,income)]),centers=3,nstart=10,iter.max=50)
table(kmodel2$cluster) # Cluster Size
kmodel2$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
kmodel2 <- kmeans(scale(xtable[,.(sat,income)]),centers=3,nstart=10,iter.max=50)
table(kmodel2$cluster) # Cluster Size
kmodel2$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
kmodel2 <- kmeans(scale(xtable[,.(sat,income)]),centers=3,nstart=10,iter.max=50)
table(kmodel2$cluster) # Cluster Size
kmodel2$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
kmodel2 <- kmeans(scale(xtable[,.(sat,income)]),centers=3,nstart=10,iter.max=50)
table(kmodel2$cluster) # Cluster Size
kmodel2$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
kmodel2 <- kmeans(scale(xtable[,.(sat,income)]),centers=3,nstart=10,iter.max=50)
table(kmodel2$cluster) # Cluster Size
kmodel2$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
kmodel2 <- kmeans(scale(xtable[,.(sat,income)]),centers=3,nstart=10,iter.max=50)
table(kmodel2$cluster) # Cluster Size
kmodel2$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
kmodel2 <- kmeans(scale(xtable[,.(sat,income)]),centers=3,nstart=10,iter.max=50)
table(kmodel2$cluster) # Cluster Size
kmodel2$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
kmodel1 <- kmeans(xtable,centers=3,nstart=10,iter.max=50)
table(kmodel1$cluster) # Cluster Size
kmodel1$centers # Centers for K-means
xmeans # Actual centers for variables
table(kmodel1$cluster,dtable$group)/500 # accuracy: cluster1 = 49%, cluster2 = 69%, cluster3 = 50%
table(kmodel2$cluster,dtable$group)/500 # accuracy: cluster1 = 74%, cluster2 = 100%, cluster3 = 66%
kwss1 <- kmeans.wss(xtable$income,kmax=10)
plot.wss(kwss1) # Elbow plot of Total WSS
kwss2 <- kmeans.wss(xtable[,.(sat,income)],kmax=10)
plot.wss(kwss2) # Elbow plot of Total WSS
plot.wss(kwss2) # Elbow plot of Total WSS
summary(pooled) # sat = 950.891 + 2.792*income
pooled_k <- lm(sat~income+kgroup,data=xtable)          # K-means pooled
pooled_h <- lm(sat~income+hgroup,data=xtable)          # H-clust pooled
summary(pooled_k) # sat = 950.891 + 2.792*income
summary(pooled_h) # sat = 950.891 + 2.792*income
summary(pooled_k) # sat = 950.891 + 2.792*income
pooled_k <- lm(sat~income+group,data=dtable)   # K-means pooled
summary(pooled_k) # sat = 950.891 + 2.792*income
dtable
pooled_g <- lm(sat~income+ group,data=dtable)   # dgroups pooled
pooled_k <- lm(sat~income+kgroup,data=xtable)   # K-means pooled
pooled_h <- lm(sat~income+hgroup,data=xtable)   # H-clust pooled
within_k <- lm(sat~income+kgroup-1,data=xtable) # K-means within
within_h <- lm(sat~income+hgroup-1,data=xtable) # H-clust within
summary(pooled_g) # sat = 950.891 + 2.792*income
summary(pooled_k) # sat = 950.891 + 2.792*income
summary(pooled_h) # sat = 950.891 + 2.792*income
summary(pooled_g) # sat = 2111.26 - 20.17*income + 701.9*group2 -  506*group3
summary(within_k) # sat = 000.000 + 0.735*income + 1155*kgroup1 + 934*kgroup2
summary(within_h) # sat = 000.000 + 0.139*income + 1140*hgroup1 + 997*hgroup2 + 1272*hgroup3 + 826*hgroup4
rm(list=ls(all=TRUE))
setwd("E:/UTD/BUAN 6312/Project/")
library(haven)
library(NbClust)
library(randomForest)
library(tidyverse)
library(maps)
library(ggplot2)
library(rworldmap)
library(plm)
library(foreign)
library(e1071)
library(PerformanceAnalytics)
library(corrplot)
library(psych)
guns <- read_dta('guns.dta')
pairs.panels(guns,scale=TRUE)
par("mar")
par()
par('oma')
par('oma')
par(oma=c(5,7,1,1))
pairs.panels(guns,scale=TRUE)
par(oma=c(0,0,0,0))
pairs.panels(guns,scale=TRUE)
pairs.panels(guns,scale=FALSE)
library(corrplot)
pairs.panels(guns,scale=TRUE)
corrplot.mixed(cor(guns),order='hclust',tl.col='black')
guns
corrplot.mixed(cor(guns[2:11]),order='hclust',tl.col='black')
corrplot.mixed(cor(guns[2:11]),order='hclust',tl.col='black',scale=TRUE)
corrplot.mixed(cor(guns[2:11]),order='hclust',tl.col='black',cex=1.5)
corrplot.mixed(cor(guns[2:11]),order='hclust',tl.col='black')
install.packages('GGally')
library(GGally)
ggpairs(guns[2:11])
ggcorr(guns[2:11],nbreaks=8,palette='RdGy',label=TRUE,label_size=5,label_color='white')
ggcorr(guns[2:11],nbreaks=8,palette='RdGy',label=TRUE,label_size=5,label_color='white')
guns$incarc_rate[guns$stateid!=11]
hist(guns$vio[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(guns$mur[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Murder Rate')
hist(guns$rob[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Robbery Rate')
hist(guns$vio[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(guns$mur[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Murder Rate')
hist(guns$rob[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Robbery Rate')
round(skewness(guns$vio),2)
round(skewness(guns$mur),2)
round(skewness(guns$rob),2)
round(skewness(guns$vio),2)
round(skewness(guns$vio[guns$stateid!=11]),2)
round(skewness(guns$rob),2)
round(skewness(guns$rob[guns$stateid!=11]),2)
round(skewness(guns$mur),2)
round(skewness(guns$mur[guns$stateid!=11]),2)
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate',cex=1.5)
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate',scale=TRUE)
?hist
?hist
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(guns$vio[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(guns$mur,xlab='incidents per 100,000 members of population',main='Murder Rate')
hist(guns$mur[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Murder Rate')
hist(guns$rob,xlab='incidents per 100,000 members of population',main='Robbery Rate')
hist(guns$rob[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Robbery Rate')
hist(log(guns$vio),xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(guns$vio[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(log(guns$vio),xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(guns$vio[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(log(guns$mur),xlab='incidents per 100,000 members of population',main='Murder Rate')
hist(guns$mur[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Murder Rate')
hist(guns$mur,xlab='incidents per 100,000 members of population',main='Murder Rate')
hist(log(guns$mur),xlab='incidents per 100,000 members of population',main='Murder Rate')
hist(guns$rob,xlab='incidents per 100,000 members of population',main='Robbery Rate')
hist(guns$rob[guns$stateid!=11],xlab='incidents per 100,000 members of population',main='Robbery Rate')
hist(log(guns$rob),xlab='incidents per 100,000 members of population',main='Robbery Rate')
round(skewness(guns$vio),2)
round(skewness(guns$vio),2)
round(skewness(guns$vio[guns$stateid!=11]),2)
round(skewness(guns$vio),2)
round(skewness(guns$vio[guns$stateid!=11]),2)
round(skewness(log(guns$vio)),2)
round(skewness(guns$rob),2)
round(skewness(guns$rob[guns$stateid!=11]),2)
round(skewness(log(guns$rob)),2)
round(skewness(guns$mur),2)
round(skewness(guns$mur[guns$stateid!=11]),2)
round(skewness(log(guns$mur)),2)
round(skewness(guns$vio),2)
round(skewness(guns$vio[guns$stateid!=11]),2)
round(skewness(log(guns$vio)),2)
round(skewness(guns$rob),2)
round(skewness(guns$rob[guns$stateid!=11]),2)
round(skewness(log(guns$rob)),2)
round(skewness(guns$mur),2)
round(skewness(guns$mur[guns$stateid!=11]),2)
round(skewness(log(guns$mur)),2)
round(skewness(guns$incarc_rate),2)
round(skewness(guns$incarc_rate[guns$stateid!=11]),2)
round(skewness(log(guns$incarc_rate)),2)
round(skewness(guns$avginc),2)
round(skewness(guns$pop),2)
round(skewness(guns$density),2)
round(skewness(guns$pb1064),2)
round(skewness(guns$pw1064),2)
round(skewness(guns$pm1029),2)
round(skewness(guns$avginc),2)
round(skewness(guns$pop),2)
round(skewness(guns$density),2)
round(skewness(guns$pb1064),2)
round(skewness(guns$pw1064),2)
round(skewness(guns$pop),2)
round(skewness(guns$density),2)
round(skewness(guns$incarc_rate),2)
round(skewness(guns$avginc),2)
round(skewness(guns$pb1064),2)
round(skewness(guns$pw1064),2)
round(skewness(guns$pm1029),2)
corr(guns$pb1064,guns$pw1064)
cor(guns$pb1064,guns$pw1064)
cor(log(guns$pb1064),log(guns$pw1064))
round(skewness(log(guns$vio)),2)
round(skewness(guns$vio),2)
round(skewness(log(guns$vio)),2)
round(skewness(guns$rob),2)
round(skewness(log(guns$rob)),2)
round(skewness(guns$mur),2)
round(skewness(log(guns$mur)),2)
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate')
hist(log(guns$vio),xlab='incidents per 100,000 members of population',main='ln(Violent Crime Rate)')
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate\nskewness=2.54')
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate\nSkewness = 2.54')
round(skewness(log(guns$vio)),2)
hist(log(guns$vio),xlab='incidents per 100,000 members of population',main='ln(Violent Crime Rate)\nSkewness = -0.43')
round(skewness(guns$rob),2)
round(skewness(log(guns$rob)),2)
round(skewness(guns$mur),2)
round(skewness(log(guns$mur)),2)
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate\nSkewness = 2.54')
hist(log(guns$vio),xlab='incidents per 100,000 members of population',main='ln(Violent Crime Rate)\nSkewness = -0.43')
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate\nSkewness = 2.54')
hist(log(guns$vio),xlab='incidents per 100,000 members of population',main='ln(Violent Crime Rate)\nSkewness = -0.43')
hist(guns$rob,xlab='incidents per 100,000 members of population',main='Robbery Rate\nSkewness = 3.88')
hist(log(guns$rob),xlab='incidents per 100,000 members of population',main='ln(Robbery Rate)\nSkewness = -0.52')
hist(guns$mur,xlab='incidents per 100,000 members of population',main='Murder Rate\nSkewness = 5.79')
hist(log(guns$mur),xlab='incidents per 100,000 members of population',main='ln(Murder Rate)\nSkewness = -0.14')
hist(guns$vio,xlab='incidents per 100,000 members of population',main='Violent Crime Rate\nSkewness = 2.54')
hist(log(guns$vio),xlab='incidents per 100,000 members of population',main='ln(Violent Crime Rate)\nSkewness = -0.43')
hist(guns$rob,xlab='incidents per 100,000 members of population',main='Robbery Rate\nSkewness = 3.88')
hist(log(guns$rob),xlab='incidents per 100,000 members of population',main='ln(Robbery Rate)\nSkewness = -0.52')
hist(guns$mur,xlab='incidents per 100,000 members of population',main='Murder Rate\nSkewness = 5.79')
hist(log(guns$mur),xlab='incidents per 100,000 members of population',main='ln(Murder Rate)\nSkewness = -0.14')
guns
guns2 <- guns
guns2$lnvio <- log(guns2$vio)
guns2$lnrob <- log(guns2$rob)
guns2$lnmur <- log(guns2$mur)
guns2
guns2 <- guns
guns2$vio <- log(guns2$vio)
guns2$rob <- log(guns2$rob)
guns2$mur <- log(guns2$mur)
guns2
setnames(gun2,old=c("vio","mur","rob"),new=c("lnvio","lnmur","lnrob"))
library(data.table)
setnames(gun2,old=c("vio","mur","rob"),new=c("lnvio","lnmur","lnrob"))
setnames(guns2,old=c("vio","mur","rob"),new=c("lnvio","lnmur","lnrob"))
guns2
ggcorr(guns2[2:11],nbreaks=8,palette='RdGy',label=TRUE,label_size=5,label_color='white')
guns2 <- guns
guns2$vio <- log(guns2$vio)
guns2$rob <- log(guns2$rob)
guns2$mur <- log(guns2$mur)
guns2
rm(list=ls(all=TRUE))
library(haven)
library(NbClust)
library(randomForest)
library(tidyverse)
library(maps)
library(ggplot2)
library(rworldmap)
library(plm)
library(foreign)
library(e1071)
library(PerformanceAnalytics)
library(corrplot)
library(psych)
library(GGally)
library(data.table)
guns <- read_dta('guns.dta')
guns
guns2 <- guns
guns2
guns2$vio <- log(guns2$vio)
guns2$rob <- log(guns2$rob)
guns2$mur <- log(guns2$mur)
setnames(guns2,old=c("vio","mur","rob"),new=c("ln(vio)","ln(mur)","ln(rob)"))
guns2
ggcorr(guns2[2:11],nbreaks=8,palette='RdGy',label=TRUE,label_size=5,label_color='white')
linear_vio <- lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+pb1064+shall,data=guns)
rm(list=ls(all=TRUE))
guns <- read_dta('guns.dta')
linear_vio <- lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+pb1064+shall,data=guns)
summary(linear_vio)
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+shall,data=guns))
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pb1064+shall,data=guns))
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+shall,data=guns))
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pb1064+shall,data=guns))
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+shall,data=guns))
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pb1064+shall,data=guns))
summary(linear_vio)
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pb1064+shall,data=guns))
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+shall,data=guns))
summary(linear_vio)
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+shall,data=guns))
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pb1064+shall,data=guns))
summary(linear_vio)
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+shall,data=guns))
summary(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pb1064+shall,data=guns))
summary(linear_vio)
bic(lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+shall,data=guns))
whites_vio <- lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+shall,data=guns)
blacks_vio <- lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pb1064+shall,data=guns)
linear_vio <- lm(log(vio)~incarc_rate+avginc+density+pop+pm1029+pw1064+pb1064+shall,data=guns)
summary(whites_vio)
summary(blacks_vio)
summary(linear_vio)
summary(whites_vio)
summary(blacks_vio)
summary(linear_vio)
bic(white_vio)
bic(whites_vio)
aic(whites_vio)
library(haven)
library(NbClust)
library(randomForest)
library(tidyverse)
library(maps)
library(ggplot2)
library(rworldmap)
library(plm)
library(foreign)
library(e1071)
library(PerformanceAnalytics)
library(corrplot)
library(psych)
library(GGally)
library(data.table)
library(sandwich)
aic(whites_vio)
install.packages("stats")
install.packages("stats")
library(stats)
aic(whites_vio)
bic(whites_vio)
library(stats4)
AIC(whites_vio)
BIC(whites_vio)
AIC(c(whites_vio,blacks_vio,linear_vio)
AIC(c(whites_vio,blacks_vio,linear_vio))
c(AIC(whites_vio),AIC(blacks_vio),AIC(linear_vio))
c(AIC(whites_vio),AIC(blacks_vio),AIC(linear_vio))
c(BIC(whites_vio),BIC(blacks_vio),BIC(linear_vio))
